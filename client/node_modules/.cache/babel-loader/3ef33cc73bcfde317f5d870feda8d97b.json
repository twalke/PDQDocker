{"ast":null,"code":"import _classCallCheck from \"/Users/twalke/Desktop/PDQ_CN/client/cabalistic-necromancer/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/twalke/Desktop/PDQ_CN/client/cabalistic-necromancer/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/twalke/Desktop/PDQ_CN/client/cabalistic-necromancer/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/twalke/Desktop/PDQ_CN/client/cabalistic-necromancer/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/twalke/Desktop/PDQ_CN/client/cabalistic-necromancer/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/twalke/Desktop/PDQ_CN/client/cabalistic-necromancer/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/twalke/Desktop/PDQ_CN/client/cabalistic-necromancer/src/ShowAlert.js\";\nimport React, { Component } from \"react\";\nimport ThoughtData from \"./ThoughtData\";\n\nvar ShowAlert =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ShowAlert, _Component);\n\n  function ShowAlert() {\n    var _this;\n\n    _classCallCheck(this, ShowAlert);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ShowAlert).call(this));\n    _this.handleClick = _this.handleClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.state = {\n      isThoughtDisplayed: false,\n      loading: true,\n      errMsg: null\n    };\n    return _this;\n  }\n\n  _createClass(ShowAlert, [{\n    key: \"handleClick\",\n    value: function handleClick() {\n      this.setState({\n        isThoughtDisplayed: true\n      }); // this.setState(prevState => ({loading: !prevState.loading}));\n    } // showAlert() {\n    //   alert(\"sup\");\n    // }\n    // displayThought = () => {\n    //   this.setState(prevState => ({\n    //     displayThought: !prevState.displayThought\n    //   }));\n    // }\n    // componentDidMount() {\n    //   this.displayThought();\n    // }\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var isThoughtDisplayed = this.state.isThoughtDisplayed;\n      var button;\n      button = React.createElement(\"button\", {\n        onClick: this.handleClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, \"Display Thought\");\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(Thought, {\n        isThoughtDisplayed: isThoughtDisplayed,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }), button); // return <button onClick={this.displayThought}>show alert</button>;\n    }\n  }]);\n\n  return ShowAlert;\n}(Component);\n\nfunction Thought(state) {\n  if (state.isThoughtDisplayed) {\n    return React.createElement(ThoughtData, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    });\n  }\n\n  return null;\n}\n\nexport default ShowAlert; // const rootElement = document.getElementById(\"root\");\n// ReactDOM.render(<ShowAlert displayThought={true}/>, rootElement);","map":{"version":3,"sources":["/Users/twalke/Desktop/PDQ_CN/client/cabalistic-necromancer/src/ShowAlert.js"],"names":["React","Component","ThoughtData","ShowAlert","handleClick","bind","state","isThoughtDisplayed","loading","errMsg","setState","button","Thought"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAOC,WAAP,MAAwB,eAAxB;;IAEMC,S;;;;;AACJ,uBAAc;AAAA;;AAAA;;AACZ;AACA,UAAKC,WAAL,GAAmB,MAAKA,WAAL,CAAiBC,IAAjB,uDAAnB;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,kBAAkB,EAAE,KADT;AAEXC,MAAAA,OAAO,EAAE,IAFE;AAGXC,MAAAA,MAAM,EAAE;AAHG,KAAb;AAHY;AAQb;;;;kCAEa;AACZ,WAAKC,QAAL,CAAc;AAACH,QAAAA,kBAAkB,EAAE;AAArB,OAAd,EADY,CAEZ;AACD,K,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;6BAES;AACP,UAAMA,kBAAkB,GAAG,KAAKD,KAAL,CAAWC,kBAAtC;AACA,UAAII,MAAJ;AAEAA,MAAAA,MAAM,GAAG;AAAQ,QAAA,OAAO,EAAE,KAAKP,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAT;AAEA,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,OAAD;AAAS,QAAA,kBAAkB,EAAEG,kBAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEGI,MAFH,CADF,CANO,CAYP;AACD;;;;EAzCqBV,S;;AA4CxB,SAASW,OAAT,CAAiBN,KAAjB,EAAwB;AACrB,MAAIA,KAAK,CAACC,kBAAV,EAA8B;AAC5B,WAAO,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AACD,SAAO,IAAP;AACD;;AAEF,eAAeJ,SAAf,C,CAEA;AACA","sourcesContent":["import React, { Component } from \"react\";\n\nimport ThoughtData from \"./ThoughtData\";\n\nclass ShowAlert extends Component {\n  constructor() {\n    super();\n    this.handleClick = this.handleClick.bind(this);\n    this.state = {\n      isThoughtDisplayed: false,\n      loading: true,\n      errMsg: null\n    }\n  }\n\n  handleClick() {\n    this.setState({isThoughtDisplayed: true});\n    // this.setState(prevState => ({loading: !prevState.loading}));\n  }\n\n  // showAlert() {\n  //   alert(\"sup\");\n  // }\n  // displayThought = () => {\n  //   this.setState(prevState => ({\n  //     displayThought: !prevState.displayThought\n  //   }));\n  // }\n  // componentDidMount() {\n  //   this.displayThought();\n  // }\n\n  render() {\n    const isThoughtDisplayed = this.state.isThoughtDisplayed;\n    let button;\n\n    button = <button onClick={this.handleClick}>Display Thought</button>\n\n    return (\n      <div>\n        <Thought isThoughtDisplayed={isThoughtDisplayed}/>\n        {button}\n      </div>\n    );\n    // return <button onClick={this.displayThought}>show alert</button>;\n  }\n}\n\nfunction Thought(state) {\n   if (state.isThoughtDisplayed) {\n     return <ThoughtData /> ;\n   }\n   return null;\n }\n\nexport default ShowAlert;\n\n// const rootElement = document.getElementById(\"root\");\n// ReactDOM.render(<ShowAlert displayThought={true}/>, rootElement);\n"]},"metadata":{},"sourceType":"module"}