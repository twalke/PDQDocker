{"ast":null,"code":"import _classCallCheck from \"/Users/twalke/Desktop/PDQ_CN/client/cabalistic-necromancer/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/twalke/Desktop/PDQ_CN/client/cabalistic-necromancer/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/twalke/Desktop/PDQ_CN/client/cabalistic-necromancer/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/twalke/Desktop/PDQ_CN/client/cabalistic-necromancer/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/twalke/Desktop/PDQ_CN/client/cabalistic-necromancer/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/twalke/Desktop/PDQ_CN/client/cabalistic-necromancer/src/ThoughtDetail.js\";\nimport React, { Component } from 'react';\nimport axios from \"axios\";\n\nvar ThoughtDetail =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ThoughtDetail, _Component);\n\n  function ThoughtDetail() {\n    var _this;\n\n    _classCallCheck(this, ThoughtDetail);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ThoughtDetail).call(this));\n    _this.state = {\n      name: \"\",\n      currentBeer: \"\",\n      currentThought: \"\",\n      daydream: \"\",\n      loading: true,\n      errMsg: null\n    };\n    return _this;\n  }\n\n  _createClass(ThoughtDetail, [{\n    key: \"getThought\",\n    value: function getThought() {\n      var _this2 = this;\n\n      console.log(this.props.id);\n      axios.get(\"/api/thought/\".concat(this.props.id)).then(function (response) {\n        return _this2.setState({\n          thought: response.data,\n          loading: false,\n          errMsg: null\n        });\n      }).catch(function (err) {\n        return _this2.setState({\n          loading: false,\n          errMsg: \"data unavailable\"\n        });\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getThought();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return ThoughtDetail;\n}(Component);\n\nexport default ThoughtDetail;","map":{"version":3,"sources":["/Users/twalke/Desktop/PDQ_CN/client/cabalistic-necromancer/src/ThoughtDetail.js"],"names":["React","Component","axios","ThoughtDetail","state","name","currentBeer","currentThought","daydream","loading","errMsg","console","log","props","id","get","then","response","setState","thought","data","catch","err","getThought"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;IAEMC,a;;;;;AACJ,2BAAa;AAAA;;AAAA;;AACX;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE,EADK;AAEXC,MAAAA,WAAW,EAAE,EAFF;AAGXC,MAAAA,cAAc,EAAE,EAHL;AAIXC,MAAAA,QAAQ,EAAE,EAJC;AAKXC,MAAAA,OAAO,EAAE,IALE;AAMXC,MAAAA,MAAM,EAAE;AANG,KAAb;AAFW;AAUZ;;;;iCAEY;AAAA;;AACXC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWC,EAAvB;AACAZ,MAAAA,KAAK,CAACa,GAAN,wBAA0B,KAAKF,KAAL,CAAWC,EAArC,GACCE,IADD,CACM,UAAAC,QAAQ;AAAA,eAAI,MAAI,CAACC,QAAL,CAAc;AAC9BC,UAAAA,OAAO,EAAEF,QAAQ,CAACG,IADY;AAE9BX,UAAAA,OAAO,EAAE,KAFqB;AAG9BC,UAAAA,MAAM,EAAE;AAHsB,SAAd,CAAJ;AAAA,OADd,EAMCW,KAND,CAMQ,UAAAC,GAAG;AAAA,eAAI,MAAI,CAACJ,QAAL,CAAc;AAC3BT,UAAAA,OAAO,EAAE,KADkB;AAE3BC,UAAAA,MAAM,EAAE;AAFmB,SAAd,CAAJ;AAAA,OANX;AAUD;;;wCAEmB;AAClB,WAAKa,UAAL;AACD;;;6BAEQ;AACP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAKD;;;;EArCyBtB,S;;AAwC5B,eAAeE,aAAf","sourcesContent":["import React, { Component } from 'react';\nimport axios from \"axios\";\n\nclass ThoughtDetail extends Component {\n  constructor(){\n    super();\n    this.state = {\n      name: \"\",\n      currentBeer: \"\",\n      currentThought: \"\",\n      daydream: \"\",\n      loading: true,\n      errMsg: null\n    }\n  }\n\n  getThought() {\n    console.log(this.props.id)\n    axios.get(`/api/thought/${this.props.id}`)\n    .then(response => this.setState({\n      thought: response.data,\n      loading: false,\n      errMsg: null\n    }))\n    .catch (err => this.setState({\n      loading: false,\n      errMsg: \"data unavailable\"\n    }))\n  }\n\n  componentDidMount() {\n    this.getThought();\n  }\n\n  render() {\n    return (\n      <div>\n\n      </div>\n    );\n  }\n}\n\nexport default ThoughtDetail;\n"]},"metadata":{},"sourceType":"module"}