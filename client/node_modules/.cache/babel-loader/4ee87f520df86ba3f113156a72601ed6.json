{"ast":null,"code":"import _classCallCheck from \"/Users/twalke/Desktop/PDQ_CN/client/cabalistic-necromancer/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/twalke/Desktop/PDQ_CN/client/cabalistic-necromancer/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/twalke/Desktop/PDQ_CN/client/cabalistic-necromancer/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/twalke/Desktop/PDQ_CN/client/cabalistic-necromancer/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/twalke/Desktop/PDQ_CN/client/cabalistic-necromancer/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/twalke/Desktop/PDQ_CN/client/cabalistic-necromancer/src/ThoughtData.js\";\nimport React, { Component } from 'react';\nimport axios from \"axios\";\n\nvar ThoughtData =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ThoughtData, _Component);\n\n  function ThoughtData() {\n    var _this;\n\n    _classCallCheck(this, ThoughtData);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ThoughtData).call(this));\n    _this.state = {\n      thoughts: [],\n      buttonClicked: true,\n      loading: true,\n      errMsg: null\n    };\n    return _this;\n  }\n\n  _createClass(ThoughtData, [{\n    key: \"getThoughts\",\n    value: function getThoughts() {\n      var _this2 = this;\n\n      axios.get(\"http://localhost:8080/thought\").then(function (response) {\n        return _this2.setState({\n          thoughts: response.data,\n          buttonClicked: false,\n          loading: false,\n          errMsg: null\n        });\n      }).catch(function (err) {\n        return _this2.setState({\n          loading: false,\n          errMsg: \"data unavailable\"\n        });\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getThoughts();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.state.loading) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35\n          },\n          __self: this\n        }, \"Loading...\");\n      }\n\n      this.setState({\n        buttonClicked: true\n      });\n\n      if (!this.state.loading && this.state.buttonClicked) {\n        this.getThoughts();\n      }\n\n      return React.createElement(\"div\", {\n        className: \"fullThought\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"empNameAndImg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"employeeImg\",\n        src: require(\"./img/empPics/\" + this.state.thoughts.name + \".png\"),\n        alt: \"employeePicture\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }), React.createElement(\"h1\", {\n        className: \"employeeName\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, this.state.thoughts ? this.state.thoughts.name : React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }))), React.createElement(\"h2\", {\n        className: \"currentBeerType\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, \"Current Beer: \", this.state.thoughts ? this.state.thoughts.currentBeer : React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      })), React.createElement(\"h2\", {\n        className: \"currentThoughtQuote\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, \"Current Thought: \", this.state.thoughts ? this.state.thoughts.currentThought : React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"daydream\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, \"Daydream\"), React.createElement(\"img\", {\n        src: this.state.thoughts ? this.state.thoughts.daydream : React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        }),\n        alt: \"daydream\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return ThoughtData;\n}(Component);\n\nexport { ThoughtData as default };","map":{"version":3,"sources":["/Users/twalke/Desktop/PDQ_CN/client/cabalistic-necromancer/src/ThoughtData.js"],"names":["React","Component","axios","ThoughtData","state","thoughts","buttonClicked","loading","errMsg","get","then","response","setState","data","catch","err","getThoughts","require","name","currentBeer","currentThought","daydream"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from \"axios\";\n\nexport default class ThoughtData extends Component {\n  constructor() {\n    super();\n    this.state = {\n      thoughts: [],\n      buttonClicked: true,\n      loading: true,\n      errMsg: null\n    }\n  }\n\n  getThoughts() {\n    axios.get(\"http://localhost:8080/thought\")\n    .then(response => this.setState({\n      thoughts: response.data,\n      buttonClicked: false,\n      loading: false,\n      errMsg: null\n    }))\n    .catch (err => this.setState({\n      loading: false,\n      errMsg: \"data unavailable\"\n    }))\n  }\n\n  componentDidMount(){\n    this.getThoughts();\n  }\n\n  render() {\n    if(this.state.loading) {\n      return( <div>Loading...</div>);\n    }\n\n    this.setState({\n      buttonClicked: true\n    })\n\n    if (!this.state.loading && this.state.buttonClicked) {\n        this.getThoughts();\n    }\n\n    return (\n      <div className=\"fullThought\">\n        <div className=\"empNameAndImg\">\n          <img className=\"employeeImg\" src={require(\"./img/empPics/\"+this.state.thoughts.name+\".png\")} alt={\"employeePicture\"} />\n          <h1 className=\"employeeName\">{this.state.thoughts?this.state.thoughts.name:<div></div>}</h1>\n        </div>\n        <h2 className=\"currentBeerType\">Current Beer: {this.state.thoughts?this.state.thoughts.currentBeer:<div></div>}</h2>\n        <h2 className=\"currentThoughtQuote\">Current Thought: {this.state.thoughts?this.state.thoughts.currentThought:<div></div>}</h2>\n        <div className=\"daydream\">\n          <h2>Daydream</h2>\n          <img src={this.state.thoughts?this.state.thoughts.daydream:<div></div>} alt={\"daydream\"} />\n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}