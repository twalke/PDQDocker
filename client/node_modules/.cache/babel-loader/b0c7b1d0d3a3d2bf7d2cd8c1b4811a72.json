{"ast":null,"code":"import _regeneratorRuntime from \"/Users/twalke/Desktop/PDQ_CN/client/cabalistic-necromancer/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/twalke/Desktop/PDQ_CN/client/cabalistic-necromancer/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/twalke/Desktop/PDQ_CN/client/cabalistic-necromancer/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/twalke/Desktop/PDQ_CN/client/cabalistic-necromancer/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/twalke/Desktop/PDQ_CN/client/cabalistic-necromancer/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/twalke/Desktop/PDQ_CN/client/cabalistic-necromancer/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/twalke/Desktop/PDQ_CN/client/cabalistic-necromancer/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/twalke/Desktop/PDQ_CN/client/cabalistic-necromancer/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/twalke/Desktop/PDQ_CN/client/cabalistic-necromancer/src/DisplayThoughtButton.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport ThoughtData from \"./ThoughtData\";\n\nvar DisplayThoughtButton =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(DisplayThoughtButton, _Component);\n\n  function DisplayThoughtButton() {\n    var _this;\n\n    _classCallCheck(this, DisplayThoughtButton);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(DisplayThoughtButton).call(this));\n    _this.handleClick = _this.handleClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.state = {\n      thoughts: [],\n      isThoughtDisplayed: false,\n      buttonClicked: false,\n      loading: true,\n      errMsg: null\n    };\n    return _this;\n  }\n\n  _createClass(DisplayThoughtButton, [{\n    key: \"loading\",\n    value: function loading() {\n      this.setState({\n        buttonClicked: true\n      });\n    }\n  }, {\n    key: \"handleClick\",\n    value: function () {\n      var _handleClick = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.loading();\n                _context.t0 = this;\n                _context.next = 4;\n                return this.GetThoughts();\n\n              case 4:\n                _context.t1 = _context.sent;\n                _context.t2 = {\n                  buttonClicked: false,\n                  isThoughtDisplayed: true,\n                  thoughts: _context.t1\n                };\n\n                _context.t0.setState.call(_context.t0, _context.t2);\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function handleClick() {\n        return _handleClick.apply(this, arguments);\n      }\n\n      return handleClick;\n    }()\n  }, {\n    key: \"GetThoughts\",\n    value: function () {\n      var _GetThoughts = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        var _this2 = this;\n\n        var thoughts;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                thoughts = [];\n                _context2.next = 3;\n                return axios.get(\"http://localhost:8080/thought\").then(function (response) {\n                  return thoughts = response.data;\n                }).catch(function (err) {\n                  _this2.handleClick();\n\n                  return null;\n                });\n\n              case 3:\n                return _context2.abrupt(\"return\", thoughts);\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function GetThoughts() {\n        return _GetThoughts.apply(this, arguments);\n      }\n\n      return GetThoughts;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var isThoughtDisplayed = this.state.isThoughtDisplayed;\n      var buttonClicked = this.state.buttonClicked;\n      var errMsg = this.state.errMsg;\n      var button;\n      button = React.createElement(\"button\", {\n        onClick: this.handleClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, \"Display Thought\");\n      console.log(errMsg);\n\n      if (errMsg) {\n        return React.createElement(\"div\", {\n          className: \"thoughtContainer\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58\n          },\n          __self: this\n        }, \"errMsg\"), button);\n      }\n\n      if (isThoughtDisplayed && !buttonClicked && this.state.thoughts) {\n        return React.createElement(\"div\", {\n          className: \"thoughtContainer\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65\n          },\n          __self: this\n        }, React.createElement(Thought, {\n          thoughts: this.state.thoughts,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        }), button);\n      } else if (!isThoughtDisplayed && buttonClicked) {\n        return React.createElement(\"div\", {\n          className: \"thoughtContainer\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        }, \"Loading...\"), button);\n      } else if (isThoughtDisplayed && buttonClicked && this.state.thoughts) {\n        return React.createElement(\"div\", {\n          className: \"thoughtContainer\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          },\n          __self: this\n        }, React.createElement(Thought, {\n          thoughts: this.state.thoughts,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          },\n          __self: this\n        }, \"Loading...\"), button);\n      } else {\n        return React.createElement(\"div\", {\n          className: \"thoughtContainer\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87\n          },\n          __self: this\n        }, button);\n      }\n    }\n  }]);\n\n  return DisplayThoughtButton;\n}(Component);\n\nfunction Thought(state) {\n  var thoughts = state.thoughts;\n  return React.createElement(ThoughtData, {\n    thoughts: thoughts,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  });\n}\n\nexport default DisplayThoughtButton;","map":{"version":3,"sources":["/Users/twalke/Desktop/PDQ_CN/client/cabalistic-necromancer/src/DisplayThoughtButton.js"],"names":["React","Component","axios","ThoughtData","DisplayThoughtButton","handleClick","bind","state","thoughts","isThoughtDisplayed","buttonClicked","loading","errMsg","setState","GetThoughts","get","then","response","data","catch","err","button","console","log","Thought"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\n\nimport ThoughtData from \"./ThoughtData\";\n\nclass DisplayThoughtButton extends Component {\n  constructor() {\n    super();\n    this.handleClick = this.handleClick.bind(this);\n    this.state = {\n      thoughts: [],\n      isThoughtDisplayed: false,\n      buttonClicked: false,\n      loading: true,\n      errMsg: null\n    }\n  }\n\n  loading() {\n    this.setState({\n      buttonClicked: true\n    });\n  }\n  async handleClick() {\n    this.loading();\n    this.setState({\n      buttonClicked: false,\n      isThoughtDisplayed: true,\n      thoughts: await this.GetThoughts()\n    });\n\n  }\n\n  async GetThoughts() {\n    let thoughts = [];\n\n    await axios.get(\"http://localhost:8080/thought\")\n    .then(response => thoughts = response.data)\n    .catch (err => {\n      this.handleClick();\n      return null;\n    })\n\n    return thoughts;\n  }\n\n  render() {\n    const isThoughtDisplayed = this.state.isThoughtDisplayed;\n    const buttonClicked = this.state.buttonClicked;\n    const errMsg = this.state.errMsg;\n    let button;\n    button = <button onClick={this.handleClick}>Display Thought</button>\n\n    console.log(errMsg);\n    if (errMsg) {\n      return (\n        <div className=\"thoughtContainer\">\n          <div>errMsg</div>\n          {button}\n        </div>\n      );\n    }\n    if (isThoughtDisplayed && !buttonClicked && this.state.thoughts) {\n      return (\n        <div className=\"thoughtContainer\">\n          <Thought thoughts={this.state.thoughts}/>\n          {button}\n        </div>\n      );\n    } else if(!isThoughtDisplayed && buttonClicked) {\n      return (\n        <div className=\"thoughtContainer\">\n          <div>Loading...</div>\n          {button}\n        </div>\n      );\n    } else if(isThoughtDisplayed && buttonClicked && this.state.thoughts) {\n      return (\n        <div className=\"thoughtContainer\">\n        <Thought thoughts={this.state.thoughts}/>\n          <div>Loading...</div>\n          {button}\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"thoughtContainer\">\n          {button}\n        </div>\n      );\n    }\n\n  }\n}\n\nfunction Thought(state) {\n  let thoughts = state.thoughts;\n\n  return <ThoughtData thoughts={thoughts}/> ;\n }\n\nexport default DisplayThoughtButton;\n"]},"metadata":{},"sourceType":"module"}