{"ast":null,"code":"import _classCallCheck from \"/Users/twalke/Desktop/PDQ_CN/client/cabalistic-necromancer/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/twalke/Desktop/PDQ_CN/client/cabalistic-necromancer/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/twalke/Desktop/PDQ_CN/client/cabalistic-necromancer/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/twalke/Desktop/PDQ_CN/client/cabalistic-necromancer/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/twalke/Desktop/PDQ_CN/client/cabalistic-necromancer/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/twalke/Desktop/PDQ_CN/client/cabalistic-necromancer/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/twalke/Desktop/PDQ_CN/client/cabalistic-necromancer/src/DisplayThoughtButton.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport ThoughtData from \"./ThoughtData\";\n\nvar DisplayThoughtButton =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(DisplayThoughtButton, _Component);\n\n  function DisplayThoughtButton() {\n    var _this;\n\n    _classCallCheck(this, DisplayThoughtButton);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(DisplayThoughtButton).call(this));\n    _this.handleClick = _this.handleClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.state = {\n      isThoughtDisplayed: false,\n      loading: true,\n      errMsg: null\n    };\n    return _this;\n  }\n\n  _createClass(DisplayThoughtButton, [{\n    key: \"handleClick\",\n    value: function handleClick() {\n      this.setState({\n        isThoughtDisplayed: true\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var isThoughtDisplayed = this.state.isThoughtDisplayed;\n      var button;\n      button = React.createElement(\"button\", {\n        onClick: this.handleClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, \"Display Thought\");\n\n      if (isThoughtDisplayed) {\n        return React.createElement(\"div\", {\n          className: \"thoughtContainer\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28\n          },\n          __self: this\n        }, React.createElement(Thought, {\n          isThoughtDisplayed: this.state,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29\n          },\n          __self: this\n        }), button);\n      } else {\n        return React.createElement(\"div\", {\n          className: \"thoughtContainer\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35\n          },\n          __self: this\n        }, button);\n      }\n    }\n  }]);\n\n  return DisplayThoughtButton;\n}(Component);\n\nfunction GetThoughts() {\n  var thoughts = [];\n  console.log(thoughts.hasOwnProperty(\"name\"));\n  axios.get(\"http://localhost:8080/thought\").then(function (response) {\n    thoughts = response.data;\n    console.log(thoughts);\n    console.log(thoughts.hasOwnProperty(\"name\"));\n    return true;\n  }).catch(function (err) {\n    return console.log(\"ERROR\");\n  });\n  return thoughts;\n}\n\nfunction Thought(state) {\n  var thoughts = GetThoughts(); // if (state.isThoughtDisplayed && thoughts.) {\n  //    return <ThoughtData thoughts={thoughts}/> ;\n  // }\n\n  return null;\n}\n\nexport default DisplayThoughtButton;","map":{"version":3,"sources":["/Users/twalke/Desktop/PDQ_CN/client/cabalistic-necromancer/src/DisplayThoughtButton.js"],"names":["React","Component","axios","ThoughtData","DisplayThoughtButton","handleClick","bind","state","isThoughtDisplayed","loading","errMsg","setState","button","GetThoughts","thoughts","console","log","hasOwnProperty","get","then","response","data","catch","err","Thought"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,WAAP,MAAwB,eAAxB;;IAEMC,oB;;;;;AACJ,kCAAc;AAAA;;AAAA;;AACZ;AACA,UAAKC,WAAL,GAAmB,MAAKA,WAAL,CAAiBC,IAAjB,uDAAnB;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,kBAAkB,EAAE,KADT;AAEXC,MAAAA,OAAO,EAAE,IAFE;AAGXC,MAAAA,MAAM,EAAE;AAHG,KAAb;AAHY;AAQb;;;;kCAEa;AACZ,WAAKC,QAAL,CAAc;AAACH,QAAAA,kBAAkB,EAAE;AAArB,OAAd;AACD;;;6BAEQ;AACP,UAAMA,kBAAkB,GAAG,KAAKD,KAAL,CAAWC,kBAAtC;AACA,UAAII,MAAJ;AACAA,MAAAA,MAAM,GAAG;AAAQ,QAAA,OAAO,EAAE,KAAKP,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAT;;AAEA,UAAIG,kBAAJ,EAAwB;AACtB,eACE;AAAK,UAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,OAAD;AAAS,UAAA,kBAAkB,EAAE,KAAKD,KAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,EAEGK,MAFH,CADF;AAMD,OAPD,MAOO;AACL,eACE;AAAK,UAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGA,MADH,CADF;AAKD;AAEF;;;;EAnCgCX,S;;AAsCnC,SAASY,WAAT,GAAuB;AACrB,MAAIC,QAAQ,GAAG,EAAf;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,cAAT,CAAwB,MAAxB,CAAZ;AAEAf,EAAAA,KAAK,CAACgB,GAAN,CAAU,+BAAV,EACCC,IADD,CACM,UAAAC,QAAQ,EACZ;AACEN,IAAAA,QAAQ,GAAGM,QAAQ,CAACC,IAApB;AACAN,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,cAAT,CAAwB,MAAxB,CAAZ;AACA,WAAO,IAAP;AACD,GAPH,EASCK,KATD,CASQ,UAAAC,GAAG;AAAA,WAAIR,OAAO,CAACC,GAAR,CAAY,OAAZ,CAAJ;AAAA,GATX;AAWA,SAAOF,QAAP;AACD;;AAED,SAASU,OAAT,CAAiBjB,KAAjB,EAAwB;AACtB,MAAIO,QAAQ,GAAGD,WAAW,EAA1B,CADsB,CAGtB;AACA;AACA;;AACA,SAAO,IAAP;AACA;;AAEF,eAAeT,oBAAf","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\n\nimport ThoughtData from \"./ThoughtData\";\n\nclass DisplayThoughtButton extends Component {\n  constructor() {\n    super();\n    this.handleClick = this.handleClick.bind(this);\n    this.state = {\n      isThoughtDisplayed: false,\n      loading: true,\n      errMsg: null\n    }\n  }\n\n  handleClick() {\n    this.setState({isThoughtDisplayed: true});\n  }\n\n  render() {\n    const isThoughtDisplayed = this.state.isThoughtDisplayed;\n    let button;\n    button = <button onClick={this.handleClick}>Display Thought</button>\n\n    if (isThoughtDisplayed) {\n      return (\n        <div className=\"thoughtContainer\">\n          <Thought isThoughtDisplayed={this.state} />\n          {button}\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"thoughtContainer\">\n          {button}\n        </div>\n      );\n    }\n\n  }\n}\n\nfunction GetThoughts() {\n  let thoughts = [];\n  console.log(thoughts.hasOwnProperty(\"name\"));\n  \n  axios.get(\"http://localhost:8080/thought\")\n  .then(response =>\n    {\n      thoughts = response.data;\n      console.log(thoughts);\n      console.log(thoughts.hasOwnProperty(\"name\"))\n      return true;\n    }\n  )\n  .catch (err => console.log(\"ERROR\"))\n\n  return thoughts;\n}\n\nfunction Thought(state) {\n  let thoughts = GetThoughts();\n\n  // if (state.isThoughtDisplayed && thoughts.) {\n  //    return <ThoughtData thoughts={thoughts}/> ;\n  // }\n  return null;\n }\n\nexport default DisplayThoughtButton;\n"]},"metadata":{},"sourceType":"module"}