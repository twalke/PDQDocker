{"ast":null,"code":"import _classCallCheck from \"/Users/twalke/Desktop/PDQ_CN/client/cabalistic-necromancer/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/twalke/Desktop/PDQ_CN/client/cabalistic-necromancer/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/twalke/Desktop/PDQ_CN/client/cabalistic-necromancer/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/twalke/Desktop/PDQ_CN/client/cabalistic-necromancer/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/twalke/Desktop/PDQ_CN/client/cabalistic-necromancer/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/twalke/Desktop/PDQ_CN/client/cabalistic-necromancer/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/twalke/Desktop/PDQ_CN/client/cabalistic-necromancer/src/DisplayThoughtButton.js\";\nimport React, { Component } from \"react\";\nimport ThoughtData from \"./ThoughtData\";\n\nvar DisplayThoughtButton =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(DisplayThoughtButton, _Component);\n\n  function DisplayThoughtButton() {\n    var _this;\n\n    _classCallCheck(this, DisplayThoughtButton);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(DisplayThoughtButton).call(this));\n    _this.handleClick = _this.handleClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.state = {\n      thoughts: [],\n      isThoughtDisplayed: false,\n      loading: true,\n      errMsg: null\n    };\n    return _this;\n  }\n\n  _createClass(DisplayThoughtButton, [{\n    key: \"getThoughts\",\n    value: function getThoughts() {\n      var _this2 = this;\n\n      axios.get(\"http://localhost:8080/thought\").then(function (response) {\n        return _this2.setState({\n          thoughts: response.data,\n          loading: false,\n          errMsg: null\n        });\n      }).catch(function (err) {\n        return _this2.setState({\n          loading: false,\n          errMsg: \"data unavailable\"\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var isThoughtDisplayed = this.state.isThoughtDisplayed;\n      var button;\n      button = React.createElement(\"button\", {\n        onClick: this.getThoughts(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, \"Display Thought\");\n\n      if (this.state.loading) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37\n          },\n          __self: this\n        }, \"Loading...\");\n      }\n\n      return React.createElement(\"div\", {\n        className: \"thoughtContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(Thought, {\n        isThoughtDisplayed: isThoughtDisplayed,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }), button);\n    }\n  }]);\n\n  return DisplayThoughtButton;\n}(Component);\n\nfunction Thought(state) {\n  if (state.isThoughtDisplayed) {\n    return React.createElement(ThoughtData, {\n      buttonClicked: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    });\n  }\n\n  return null;\n}\n\nexport default DisplayThoughtButton;","map":{"version":3,"sources":["/Users/twalke/Desktop/PDQ_CN/client/cabalistic-necromancer/src/DisplayThoughtButton.js"],"names":["React","Component","ThoughtData","DisplayThoughtButton","handleClick","bind","state","thoughts","isThoughtDisplayed","loading","errMsg","axios","get","then","response","setState","data","catch","err","button","getThoughts","Thought"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAOC,WAAP,MAAwB,eAAxB;;IAEMC,oB;;;;;AACJ,kCAAc;AAAA;;AAAA;;AACZ;AACA,UAAKC,WAAL,GAAmB,MAAKA,WAAL,CAAiBC,IAAjB,uDAAnB;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE,EADC;AAEXC,MAAAA,kBAAkB,EAAE,KAFT;AAGXC,MAAAA,OAAO,EAAE,IAHE;AAIXC,MAAAA,MAAM,EAAE;AAJG,KAAb;AAHY;AASb;;;;kCAEa;AAAA;;AACZC,MAAAA,KAAK,CAACC,GAAN,CAAU,+BAAV,EACCC,IADD,CACM,UAAAC,QAAQ;AAAA,eAAI,MAAI,CAACC,QAAL,CAAc;AAC9BR,UAAAA,QAAQ,EAAEO,QAAQ,CAACE,IADW;AAE9BP,UAAAA,OAAO,EAAE,KAFqB;AAG9BC,UAAAA,MAAM,EAAE;AAHsB,SAAd,CAAJ;AAAA,OADd,EAMCO,KAND,CAMQ,UAAAC,GAAG;AAAA,eAAI,MAAI,CAACH,QAAL,CAAc;AAC3BN,UAAAA,OAAO,EAAE,KADkB;AAE3BC,UAAAA,MAAM,EAAE;AAFmB,SAAd,CAAJ;AAAA,OANX;AAUD;;;6BAEQ;AAEP,UAAMF,kBAAkB,GAAG,KAAKF,KAAL,CAAWE,kBAAtC;AACA,UAAIW,MAAJ;AACAA,MAAAA,MAAM,GAAG;AAAQ,QAAA,OAAO,EAAE,KAAKC,WAAL,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAT;;AAEA,UAAG,KAAKd,KAAL,CAAWG,OAAd,EAAuB;AACrB,eAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAR;AACD;;AAED,aACE;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,OAAD;AAAS,QAAA,kBAAkB,EAAED,kBAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEGW,MAFH,CADF;AAMD;;;;EAzCgClB,S;;AA4CnC,SAASoB,OAAT,CAAiBf,KAAjB,EAAwB;AACtB,MAAIA,KAAK,CAACE,kBAAV,EAA8B;AAC3B,WAAO,oBAAC,WAAD;AAAa,MAAA,aAAa,EAAE,IAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACF;;AACD,SAAO,IAAP;AACA;;AAEF,eAAeL,oBAAf","sourcesContent":["import React, { Component } from \"react\";\n\nimport ThoughtData from \"./ThoughtData\";\n\nclass DisplayThoughtButton extends Component {\n  constructor() {\n    super();\n    this.handleClick = this.handleClick.bind(this);\n    this.state = {\n      thoughts: [],\n      isThoughtDisplayed: false,\n      loading: true,\n      errMsg: null\n    }\n  }\n\n  getThoughts() {\n    axios.get(\"http://localhost:8080/thought\")\n    .then(response => this.setState({\n      thoughts: response.data,\n      loading: false,\n      errMsg: null\n    }))\n    .catch (err => this.setState({\n      loading: false,\n      errMsg: \"data unavailable\"\n    }))\n  }\n\n  render() {\n\n    const isThoughtDisplayed = this.state.isThoughtDisplayed;\n    let button;\n    button = <button onClick={this.getThoughts()}>Display Thought</button>\n    \n    if(this.state.loading) {\n      return( <div>Loading...</div>);\n    }\n\n    return (\n      <div className=\"thoughtContainer\">\n        <Thought isThoughtDisplayed={isThoughtDisplayed} />\n        {button}\n      </div>\n    );\n  }\n}\n\nfunction Thought(state) {\n  if (state.isThoughtDisplayed) {\n     return <ThoughtData buttonClicked={true}/> ;\n  }\n  return null;\n }\n\nexport default DisplayThoughtButton;\n"]},"metadata":{},"sourceType":"module"}